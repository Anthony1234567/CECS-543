{"version":3,"sources":["statesManagement/directoriesState/DirectoriesTypes.ts","statesManagement/manifestsState/ManifestsTypes.ts","statesManagement/mergeDataState/MergeDataTypes.ts","statesManagement/manifestsState/ManifestsActions.ts","statesManagement/mergeDataState/MergeDataActions.ts","components/AddButton.tsx","statesManagement/directoriesState/DirectoriesActions.ts","components/HeaderBar.tsx","components/ManiItem.tsx","components/ManiList.tsx","components/Main.tsx","statesManagement/manifestsState/ManifestsReducer.ts","statesManagement/mergeDataState/MergeDataReducer.ts","statesManagement/directoriesState/DirectoriesReducer.ts","statesManagement/Store.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["DirectoriesActionType","ManifestsActionType","MergeDataActionType","instance","Axios","create","baseURL","timeout","getAllManifests","dispatch","getState","post","sourceDirectory","directoriesState","currentSourceDirectory","then","response","status","type","UPDATE_MANIFESTS","manifests","data","catch","err","console","log","commit","FloatingActionButtons","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","event","setState","anchorEl","currentTarget","handleClose","handleClickOpenTargetDirDialog","openTargetDirDialog","handleCloseTargetDirDialog","state","open","anchoreEl","action","targetDir","_this2","classes","Boolean","react_default","a","createElement","Fab_default","color","aria-label","className","fab","onClick","Add_default","Popover_default","id","onClose","anchorOrigin","vertical","horizontal","transformOrigin","List_default","Button_default","Dialog_default","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","fullWidth","onChange","target","value","DialogActions_default","updateCurrentTargetDirectory","checkin","checkout","mergein","mergeout","React","Component","connect","store","manifestState","manifestsState","mergeDataState","targetDirectory","currentTargetDirectory","mergeData","UPDATE_MERGEDATA","newTargetDirectory","UPDATE_CURRENT_TARGET_DIRECTORY","payload","pastTargetDirectories","concat","toConsumableArray","filter","index","arr","length","indexOf","withStyles","theme","spacing","unit","positions","bottom","right","paper","position","width","padding","backgroundColor","palette","background","boxShadow","shadows","outline","root","flexGrow","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","search","borderRadius","shape","marginRight","marginLeft","fade","searchIcon","height","pointerEvents","display","alignItems","justifyContent","button","HeaderBar","delayFunction","textField","handleChange","bind","assertThisInitialized","clearTimeout","setTimeout","updateCurrentSourceDirectory","_this3","style","AppBar_default","Toolbar_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","AddButton","newSourceDirectory","UPDATE_CURRENT_SOURCE_DIRECTORY","pastSourceDirectories","ManiItem","manifest","handleManifestClick","ManiList","showArtifacts","artifacts","list","map","element","splitElement","split","ListItem_default","key","hashCode","ListItemIcon_default","Folder_default","ListItemText_default","primary","secondary","Divider_default","manifestList","tag","undefined","values","SwipeableDrawer_default","anchor","onOpen","tabIndex","role","onKeyDown","command","components_ManiItem","s","hash","i","charCodeAt","updateLabel","field","maxWidth","fullList","Main","components_HeaderBar","components_ManiList","intialManifestState","initialMergeData","initialDirectoriesState","rootReducer","combineReducers","arguments","objectSpread","middleware","thunk","createStore","compose","applyMiddleware","apply","App","es","react_router_dom","react_router","path","exact","component","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.57900983.chunk.js","sourcesContent":["export interface IDirectoriesState {\r\n\tcurrentSourceDirectory: string;\r\n\tcurrentTargetDirectory: string;\r\n\tpastSourceDirectories: string[];\r\n\tpastTargetDirectories: string[];\r\n}\r\n\r\nexport enum DirectoriesActionType {\r\n\tUPDATE_CURRENT_SOURCE_DIRECTORY = 'UPDATE_CURRENT_SOURCE_DIRECTORY',\r\n\tUPDATE_CURRENT_TARGET_DIRECTORY = 'UPDATE_CURRENT_TARGET_DIRECTORY'\r\n}\r\n\r\nexport interface IUpdateCurrentSourceDirectoryAction {\r\n\ttype: DirectoriesActionType.UPDATE_CURRENT_SOURCE_DIRECTORY;\r\n\tpayload: {\r\n\t\tcurrentSourceDirectory: string;\r\n\t\tpastSourceDirectories: string[];\r\n\t};\r\n}\r\n\r\nexport interface IUpdateCurrentTargetDirectoryAction {\r\n\ttype: DirectoriesActionType.UPDATE_CURRENT_TARGET_DIRECTORY;\r\n\tpayload: {\r\n\t\tcurrentTargetDirectory: string;\r\n\t\tpastTargetDirectories: string[];\r\n\t};\r\n}\r\n\r\nexport type IDirectoriesActions = IUpdateCurrentSourceDirectoryAction | IUpdateCurrentTargetDirectoryAction;\r\n","export type IManifest = ICommitManifest | ICheckInManifest | ICheckOutManifest;\r\n\r\nexport interface ICommitManifest {\r\n\tid: string;\r\n\targument: string;\r\n\tauthor: string;\r\n\tdescription: string;\r\n\ttag: string[];\r\n\tvalues: string[];\r\n\tcreated: number;\r\n\tlastUpdated: number;\r\n\tcommand: string;\r\n}\r\nexport interface ICheckInManifest {\r\n\tid: string;\r\n\targument: {\r\n\t\tsource: string;\r\n\t\ttarget: string;\r\n\t};\r\n\tauthor: string;\r\n\tdescription: string;\r\n\ttag: string[];\r\n\tcreated: number;\r\n\tlastUpdated: number;\r\n\tcommand: string;\r\n}\r\n\r\nexport type ICheckOutManifest = ICheckInManifest;\r\n\r\nexport type IManifestsState = IManifest[];\r\n\r\nexport enum ManifestsActionType {\r\n\tUPDATE_MANIFESTS = 'UPDATE_MANIFESTS'\r\n}\r\n\r\nexport interface IManifestUpdateAction {\r\n\ttype: ManifestsActionType.UPDATE_MANIFESTS;\r\n\tmanifests: IManifest[];\r\n}\r\n\r\nexport type IManifestAction = IManifestUpdateAction;\r\n","export interface IMergeData {\r\n\tmergeType: string;\r\n\tsource: string | null;\r\n\ttarget: string | null;\r\n\tchoice: 'Target' | 'Source';\r\n}\r\nexport type IMergeDataState = IMergeData[];\r\n\r\nexport enum MergeDataActionType {\r\n\tUPDATE_MERGEDATA = 'UPDATE_MERGEDATA'\r\n}\r\n\r\nexport interface IUpdateMergeDataAction {\r\n\ttype: MergeDataActionType.UPDATE_MERGEDATA;\r\n\tmergeData: IMergeDataState;\r\n}\r\n\r\nexport type IMergeDataActions = IUpdateMergeDataAction;\r\n","import { ManifestsActionType, IManifestUpdateAction } from './ManifestsTypes';\r\nimport { Dispatch } from 'redux';\r\n\r\nimport Axios from 'axios';\r\nconst instance = Axios.create({\r\n\tbaseURL: 'http://localhost:3001/',\r\n\ttimeout: 10000\r\n});\r\n\r\nexport const getAllManifests = () => {\r\n\treturn (dispatch: Dispatch<IManifestUpdateAction>, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/get/manifests', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: ManifestsActionType.UPDATE_MANIFESTS,\r\n\t\t\t\t\t\tmanifests: response.data\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: ManifestsActionType.UPDATE_MANIFESTS,\r\n\t\t\t\t\t\tmanifests: getState()\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const commit = () => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/commit', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetAllManifests()(dispatch, getState);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const checkin = () => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/checkin', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory,\r\n\t\t\t\ttargetDirectory: getState().directoriesState.currentTargetDirectory\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetAllManifests()(dispatch, getState);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const checkout = () => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/checkout', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory,\r\n\t\t\t\ttargetDirectory: getState().directoriesState.currentTargetDirectory\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetAllManifests()(dispatch, getState);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const updateLabel = (id: string, value: string | string[]) => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/update', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory,\r\n\t\t\t\tid: id,\r\n\t\t\t\tfield: 'tag',\r\n\t\t\t\tvalue: value\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tgetAllManifests()(dispatch, getState);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n","import { MergeDataActionType, IMergeDataState } from './MergeDataTypes';\r\nimport Axios from 'axios';\r\nimport { Dispatch } from 'redux';\r\n\r\nconst instance = Axios.create({\r\n\tbaseURL: 'http://localhost:3001/',\r\n\ttimeout: 10000\r\n});\r\nexport const mergeIn = (mergeData:IMergeDataState) => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/mergein', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory,\r\n\t\t\t\ttargetDirectory: getState().directoriesState.currentTargetDirectory,\r\n\t\t\t\tmergeData: mergeData\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: MergeDataActionType.UPDATE_MERGEDATA,\r\n\t\t\t\t\t\tmergeData: []\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n\r\nexport const mergeOut = () => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tinstance\r\n\t\t\t.post('/mergeout', {\r\n\t\t\t\tsourceDirectory: getState().directoriesState.currentSourceDirectory,\r\n\t\t\t\ttargetDirectory: getState().directoriesState.currentTargetDirectory\r\n\t\t\t})\r\n\t\t\t.then((response) => {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tif (response.status === 200) {\r\n\t\t\t\t\tconsole.log(response.data);\r\n\t\t\t\t\tdispatch({\r\n\t\t\t\t\t\ttype: MergeDataActionType.UPDATE_MERGEDATA,\r\n\t\t\t\t\t\tmergeData: response.data\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n};\r\n","// React Project\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n// Material-ui Modules\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Popover from '@material-ui/core/Popover';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n// Project Modules\r\nimport { IStoreStates } from '../statesManagement/Store';\r\nimport { commit, checkin, checkout } from '../statesManagement/manifestsState/ManifestsActions';\r\nimport { mergeIn, mergeOut } from '../statesManagement/mergeDataState/MergeDataActions';\r\nimport { updateCurrentTargetDirectory } from '../statesManagement/directoriesState/DirectoriesActions';\r\n\r\nconst styles = (theme: any) => ({\r\n\tfab: {\r\n\t\tmargin: theme.spacing.unit,\r\n\t\tpositions: 'relative',\r\n\t\tbottom: theme.spacing.unit,\r\n\t\tright: theme.spacing.unit * 5\r\n\t},\r\n\r\n\tpaper: {\r\n\t\tposition: '-webkit-sticky' as '-webkit-sticky',\r\n\t\twidth: theme.spacing.unit * 50,\r\n\t\tpadding: theme.spacing.unit * 4,\r\n\t\tbackgroundColor: theme.palette.background.paper,\r\n\t\tboxShadow: theme.shadows[5],\r\n\t\toutline: 'none' as 'none'\r\n\t}\r\n});\r\n\r\nclass FloatingActionButtons extends React.Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\tanchoreEl: null,\r\n\t\t\topenTargetDirDialog: false,\r\n\t\t\taction: '',\r\n\t\t\ttargetDir: ''\r\n\t\t};\r\n\t};\r\n\r\n\thandleClick = (event: any) => {\r\n\t\tthis.setState({\r\n\t\t\tanchorEl: event.currentTarget\r\n\t\t});\r\n\t};\r\n\r\n\thandleClose = () => {\r\n\t\tthis.setState({ anchorEl: null });\r\n\t};\r\n\r\n\thandleClickOpenTargetDirDialog = () => {\r\n\t\tthis.setState({ openTargetDirDialog: true });\r\n\t};\r\n\r\n\thandleCloseTargetDirDialog = () => {\r\n\t\tthis.setState({ openTargetDirDialog: false });\r\n\t};\r\n\r\n\thandleAction() {}\r\n\r\n\trender() {\r\n\t\tconst { classes } = this.props;\r\n\t\tconst { anchorEl } = this.state;\r\n\t\tconst open = Boolean(anchorEl);\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Fab color='secondary' aria-label='Add' className={classes.fab} onClick={this.handleClick}>\r\n\t\t\t\t\t<AddIcon />\r\n\t\t\t\t</Fab>\r\n\t\t\t\t<Popover\r\n\t\t\t\t\tid='simple-popper'\r\n\t\t\t\t\topen={open}\r\n\t\t\t\t\tanchorEl={anchorEl}\r\n\t\t\t\t\tonClose={this.handleClose}\r\n\t\t\t\t\tanchorOrigin={{\r\n\t\t\t\t\t\tvertical: 'bottom',\r\n\t\t\t\t\t\thorizontal: 'center'\r\n\t\t\t\t\t}}\r\n\t\t\t\t\ttransformOrigin={{\r\n\t\t\t\t\t\tvertical: 'top',\r\n\t\t\t\t\t\thorizontal: 'center'\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<List>\r\n\t\t\t\t\t\t\t<Button onClick={this.props.commit}>Commit</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ action: 'Checkin' });\r\n\t\t\t\t\t\t\t\t\tthis.handleClickOpenTargetDirDialog();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCheckIn\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ action: 'Checkout' });\r\n\t\t\t\t\t\t\t\t\tthis.handleClickOpenTargetDirDialog();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCheckOut\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ action: 'MergeIn' });\r\n\t\t\t\t\t\t\t\t\tthis.handleClickOpenTargetDirDialog();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMergeIn\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ action: 'MergeOut' });\r\n\t\t\t\t\t\t\t\t\tthis.handleClickOpenTargetDirDialog();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tMergeOut\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Dialog\r\n\t\t\t\t\t\topen={this.state.openTargetDirDialog}\r\n\t\t\t\t\t\tonClose={this.handleCloseTargetDirDialog}\r\n\t\t\t\t\t\taria-labelledby='form-dialog-title'\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<DialogTitle id='form-dialog-title'>{this.state.action}</DialogTitle>\r\n\t\t\t\t\t\t<DialogContent>\r\n\t\t\t\t\t\t\t<DialogContentText>Please enter a target directory to:</DialogContentText>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\t\t\tid='name'\r\n\t\t\t\t\t\t\t\tlabel='Target Directory'\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tthis.setState({ targetDir: event.target.value });\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t</TextField>\r\n\t\t\t\t\t\t</DialogContent>\r\n\t\t\t\t\t\t<DialogActions>\r\n\t\t\t\t\t\t\t<Button onClick={this.handleCloseTargetDirDialog} color='primary'>\r\n\t\t\t\t\t\t\t\tCancel\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={(event) => {\r\n\t\t\t\t\t\t\t\t\tthis.props.updateCurrentTargetDirectory(this.state.targetDir);\r\n\t\t\t\t\t\t\t\t\tswitch (this.state.action) {\r\n\t\t\t\t\t\t\t\t\t\tcase 'Checkin':\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.checkin();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'Checkout':\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.checkout();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'MergeIn':\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.mergein();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\tcase 'MergeOut':\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.mergeout();\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis.handleCloseTargetDirDialog();\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{this.state.action}\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</DialogActions>\r\n\t\t\t\t\t</Dialog>\r\n\t\t\t\t</Popover>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (store: IStoreStates) => {\r\n\treturn {\r\n\t\tmanifestState: store.manifestsState,\r\n\t\tmergeDataState: store.mergeDataState\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tcommit: commit,\r\n\tcheckin: checkin,\r\n\tcheckout: checkout,\r\n\tmergein: mergeIn,\r\n\tmergeout: mergeOut,\r\n\tupdateCurrentTargetDirectory: updateCurrentTargetDirectory\r\n})(withStyles(styles)(FloatingActionButtons));\r\n","import { Dispatch } from 'redux';\r\nimport { IDirectoriesState, DirectoriesActionType } from './DirectoriesTypes';\r\nimport { getAllManifests } from '../manifestsState/ManifestsActions';\r\n\r\nexport const updateCurrentSourceDirectory = (newSourceDirectory: string) => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tlet directoriesState: IDirectoriesState = getState().directoriesState;\r\n\t\tif (newSourceDirectory.length > 0) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: DirectoriesActionType.UPDATE_CURRENT_SOURCE_DIRECTORY,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tcurrentSourceDirectory: newSourceDirectory,\r\n\t\t\t\t\tpastSourceDirectories: [\r\n\t\t\t\t\t\t...directoriesState.pastSourceDirectories,\r\n\t\t\t\t\t\tdirectoriesState.currentSourceDirectory\r\n\t\t\t\t\t].filter((value, index, arr) => {\r\n\t\t\t\t\t\tif (value.length > 0 && arr.indexOf(value) === index) {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tgetAllManifests()(dispatch, getState);\r\n\t\t}\r\n\t};\r\n};\r\n\r\nexport const updateCurrentTargetDirectory = (newTargetDirectory: string) => {\r\n\treturn (dispatch: Dispatch, getState: Function) => {\r\n\t\tlet directoriesState: IDirectoriesState = getState().directoriesState;\r\n\t\tdispatch({\r\n\t\t\ttype: DirectoriesActionType.UPDATE_CURRENT_TARGET_DIRECTORY,\r\n\t\t\tpayload: {\r\n\t\t\t\tcurrentTargetDirectory: newTargetDirectory,\r\n\t\t\t\tpastTargetDirectories: [\r\n\t\t\t\t\t...directoriesState.pastTargetDirectories,\r\n\t\t\t\t\tdirectoriesState.currentTargetDirectory\r\n\t\t\t\t].filter((value, index, arr) => {\r\n\t\t\t\t\tif (value.length > 0 && arr.indexOf(value) === index) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n};\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport spacing from '@material-ui/core/styles/spacing';\r\nimport transitions from '@material-ui/core/styles/transitions';\r\nimport shape from '@material-ui/core/styles/shape';\r\nimport { fade } from '@material-ui/core/styles/colorManipulator';\r\nimport { IStoreStates } from '../statesManagement/Store';\r\nimport { connect } from 'react-redux';\r\nimport { updateCurrentSourceDirectory } from '../statesManagement/directoriesState/DirectoriesActions';\r\nimport AddButton from './AddButton';\r\nimport { commit, checkin } from '../statesManagement/manifestsState/ManifestsActions';\r\n\r\nconst root = {\r\n\tflexGrow: 1\r\n};\r\nconst inputInput = {\r\n\tpaddingTop: spacing.unit,\r\n\tpaddingRight: spacing.unit,\r\n\tpaddingBottom: spacing.unit,\r\n\tpaddingLeft: spacing.unit * 7,\r\n\ttransition: transitions.create('width'),\r\n\twidth: spacing.unit * 50\r\n};\r\nconst search = {\r\n\tposition: 'relative' as 'relative',\r\n\tborderRadius: shape.borderRadius,\r\n\tmarginRight: spacing.unit * 2,\r\n\tmarginLeft: spacing.unit * 20,\r\n\twidth: spacing.unit * 59,\r\n\tbackgroundColor: fade('#ffffff', 0.15)\r\n};\r\nconst searchIcon = {\r\n\twidth: spacing.unit * 9,\r\n\theight: '100%',\r\n\tposition: 'absolute' as 'absolute',\r\n\tpointerEvents: 'none' as 'none',\r\n\tdisplay: 'flex' as 'flex',\r\n\talignItems: 'center' as 'center',\r\n\tjustifyContent: 'center' as 'center'\r\n};\r\n\r\nconst button = {\r\n\tpaddingTop: spacing.unit * 2,\r\n\tmarginLeft: spacing.unit * 5\r\n};\r\n\r\nclass HeaderBar extends React.Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdelayFunction: null,\r\n\t\t\ttextField: ''\r\n\t\t};\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t}\r\n\r\n\thandleChange(event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) {\r\n\t\tclearTimeout(this.state.delayFunction);\r\n\t\tthis.setState({\r\n\t\t\ttextField: event.target.value,\r\n\t\t\tdelayFunction: setTimeout(() => {\r\n\t\t\t\tthis.props.updateCurrentSourceDirectory(this.state.textField);\r\n\t\t\t}, 500)\r\n\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={root}>\r\n\t\t\t\t<AppBar position=\"static\" color=\"primary\">\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n\t\t\t\t\t\t\t\tVersion Control System\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div style={search}>\r\n\t\t\t\t\t\t\t<div style={searchIcon}>\r\n\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<InputBase\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter your directory\"\r\n\t\t\t\t\t\t\t\tstyle={inputInput}\r\n\t\t\t\t\t\t\t\tonChange={(event) => {\r\n\t\t\t\t\t\t\t\t\tthis.handleChange(event);\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div style={button}>\r\n\t\t\t\t\t\t\t<AddButton />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</AppBar>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (store: IStoreStates) => {\r\n\treturn {\r\n\t\tdirectoriesState: store.directoriesState\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tupdateCurrentSourceDirectory: updateCurrentSourceDirectory\r\n})(HeaderBar);\r\n","import React from 'react';\r\n\r\nclass ManiItem extends React.Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tmanifest:this.props.manifest,\r\n\t\t\thandleManifestClick:this.props.handleManifestClick\r\n\t\t};\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn <li><pre>{}</pre></li>;\r\n\t}\r\n}\r\n\r\nexport default ManiItem;\r\n","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { IStoreStates } from '../statesManagement/Store';\r\nimport { connect } from 'react-redux';\r\nimport { updateLabel } from '../statesManagement/manifestsState/ManifestsActions';\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport spacing from '@material-ui/core/styles/spacing';\r\nimport { IManifest, ICommitManifest } from '../statesManagement/manifestsState/ManifestsTypes';\r\nimport ManiItem from './ManiItem';\r\n\r\nconst styles = (theme: { palette: { background: { paper: any } } }) => ({\r\n\troot: {\r\n\t\twidth: '100%',\r\n\t\tmaxWidth: 240,\r\n\t\tbackgroundColor: theme.palette.background.paper\r\n\t},\r\n\tlist: {\r\n\t\twidth: spacing.unit * 75\r\n\t},\r\n\tfullList: {\r\n\t\twidth: 'auto'\r\n\t}\r\n});\r\n\r\nclass ManiList extends React.Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tartifacts: [],\r\n\t\t\tright: false\r\n\t\t};\r\n\t}\r\n\r\n\tshowArtifacts = () => {\r\n\t\tlet artifacts = this.state.artifacts;\r\n\t\treturn (\r\n\t\t\t<div className={this.props.classes.list}>\r\n\t\t\t\t<List>\r\n\t\t\t\t\t{artifacts.map((element: any, index: any) => {\r\n\t\t\t\t\t\tlet splitElement = element.split('.psa');\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<ListItem key={this.hashCode(element)}>\r\n\t\t\t\t\t\t\t\t\t<ListItemIcon>{index % 2 === 0 ? <FolderIcon /> : <FolderIcon />}</ListItemIcon>\r\n\t\t\t\t\t\t\t\t\t<ListItemText primary={'..' + splitElement[1]} secondary={'Path: ' + element} />\r\n\t\t\t\t\t\t\t\t</ListItem>\r\n\t\t\t\t\t\t\t\t<Divider />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</List>\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\trender() {\r\n\t\tconst manifests = this.props.manifestState;\r\n\r\n\t\tconst { classes } = this.props;\r\n\t\tlet manifestList = manifests.map((element: any) => {\r\n\t\t\tif (element.tag === null)\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tkey={this.hashCode(element.id)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tartifacts: element.values !== undefined ? element.values : [],\r\n\t\t\t\t\t\t\t\tright: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{element.id}\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t);\r\n\t\t\telse\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<ListItem\r\n\t\t\t\t\t\tbutton\r\n\t\t\t\t\t\tkey={this.hashCode(element.id)}\r\n\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\tartifacts: element.values !== undefined ? element.values : [],\r\n\t\t\t\t\t\t\t\tright: true\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{element.tag}\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<List className={classes.root}>{manifestList}</List>\r\n\t\t\t\t<SwipeableDrawer\r\n\t\t\t\t\tanchor=\"right\"\r\n\t\t\t\t\topen={this.state.right}\r\n\t\t\t\t\tonClose={() => this.setState({ right: false })}\r\n\t\t\t\t\tonOpen={() => this.setState({ right: true })}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\ttabIndex={0}\r\n\t\t\t\t\t\trole=\"button\"\r\n\t\t\t\t\t\tonClick={() => this.setState({ right: false })}\r\n\t\t\t\t\t\tonKeyDown={() => this.setState({ right: true })}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.showArtifacts()}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</SwipeableDrawer>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\thandleManifestClick(manifest:IManifest){\r\n\t\tthis.setState({\r\n\t\t\tartifacts: manifest.command === \"commit\" ? (manifest as ICommitManifest).values : [],\r\n\t\t\tright: true\r\n\t\t});\r\n\t}\r\n\r\n\tgenerateManifestItems(){\r\n\t\treturn this.props.manifestState.map((manifest:IManifest,index:number)=>{\r\n\t\t\treturn (<ManiItem manifest={manifest}></ManiItem>)\r\n\t\t})\r\n\t}\r\n\thashCode(s: string) {\r\n\t\tlet hash = 0;\r\n\t\tfor (let i = 0; i < s.length; i++) {\r\n\t\t\tlet character = s.charCodeAt(i);\r\n\t\t\thash = (hash << 5) - hash + character;\r\n\t\t\thash = hash & hash;\r\n\t\t}\r\n\t\treturn hash;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (store: IStoreStates) => {\r\n\treturn {\r\n\t\tmanifestState: store.manifestsState\r\n\t};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n\tupdateLabel: updateLabel\r\n})(withStyles(styles)(ManiList));\r\n","import React from 'react';\r\nimport HeaderBar from './HeaderBar';\r\nimport ManiList from './ManiList';\r\nimport { getAllManifests, commit } from '../statesManagement/manifestsState/ManifestsActions';\r\nimport { IStoreStates } from '../statesManagement/Store';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Main extends React.Component<any, any> {\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<HeaderBar />\r\n\t\t\t\t<ManiList />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStatesToProp = (store: IStoreStates) => {\r\n\treturn {\r\n\t\tmanifests: store.manifestsState\r\n\t};\r\n};\r\n\r\nexport default connect(mapStatesToProp, {\r\n\tgetAllManifests: getAllManifests,\r\n\tcommit: commit\r\n})(Main);\r\n","import { Reducer } from 'redux';\r\nimport { IManifestsState, IManifestAction, ManifestsActionType } from './ManifestsTypes';\r\n\r\nconst intialManifestState: IManifestsState = [];\r\n\r\nexport const manifestsReducer: Reducer<IManifestsState, IManifestAction> = (\r\n\tstate: IManifestsState = intialManifestState,\r\n\taction: IManifestAction\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase ManifestsActionType.UPDATE_MANIFESTS:\r\n\t\t\treturn action.manifests;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { Reducer } from 'redux';\r\nimport { IMergeDataState, IMergeDataActions, MergeDataActionType } from './MergeDataTypes';\r\n\r\nconst initialMergeData: IMergeDataState = [];\r\n\r\nexport const mergeDataReducer: Reducer<IMergeDataState, IMergeDataActions> = (\r\n\tstate: IMergeDataState = initialMergeData,\r\n\taction: IMergeDataActions\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase MergeDataActionType.UPDATE_MERGEDATA:\r\n\t\t\treturn action.mergeData;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { IDirectoriesState, IDirectoriesActions, DirectoriesActionType } from './DirectoriesTypes';\r\nimport { Reducer } from 'redux';\r\n\r\nconst initialDirectoriesState: IDirectoriesState = {\r\n\tcurrentSourceDirectory: '',\r\n\tpastSourceDirectories: [],\r\n\tcurrentTargetDirectory: '',\r\n\tpastTargetDirectories: []\r\n};\r\n\r\nexport const directoriesReducer: Reducer<IDirectoriesState, IDirectoriesActions> = (\r\n\tdirectoriesState: IDirectoriesState = initialDirectoriesState,\r\n\taction: IDirectoriesActions\r\n) => {\r\n\tswitch (action.type) {\r\n\t\tcase DirectoriesActionType.UPDATE_CURRENT_SOURCE_DIRECTORY:\r\n\t\t\treturn { ...directoriesState, ...action.payload };\r\n\t\tcase DirectoriesActionType.UPDATE_CURRENT_TARGET_DIRECTORY:\r\n\t\t\treturn { ...directoriesState, ...action.payload };\r\n\t\tdefault:\r\n\t\t\treturn directoriesState;\r\n\t}\r\n};\r\n","import { IDirectoriesState } from './directoriesState/DirectoriesTypes';\r\nimport thunk from 'redux-thunk';\r\nimport { combineReducers, createStore, applyMiddleware, compose, Store } from 'redux';\r\n\r\nimport { IManifestsState } from './manifestsState/ManifestsTypes';\r\nimport { manifestsReducer } from './manifestsState/ManifestsReducer';\r\nimport { mergeDataReducer } from './mergeDataState/MergeDataReducer';\r\nimport { IMergeDataState } from './mergeDataState/MergeDataTypes';\r\nimport { directoriesReducer } from './directoriesState/DirectoriesReducer';\r\n\r\nexport interface IStoreStates {\r\n\tmanifestsState: IManifestsState;\r\n\tmergeDataState: IMergeDataState;\r\n\tdirectoriesState: IDirectoriesState;\r\n}\r\n\r\nexport const rootReducer = combineReducers<IStoreStates>({\r\n\tmanifestsState: manifestsReducer,\r\n\tmergeDataState: mergeDataReducer,\r\n\tdirectoriesState: directoriesReducer\r\n});\r\n\r\nexport const middleware = [ thunk ];\r\n\r\nconst store: Store<IStoreStates, any> = createStore(rootReducer, compose(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport { Provider } from 'react-redux';\r\nimport store from './statesManagement/Store';\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Router>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route path=\"/\" exact component={Main} />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Router>\r\n\t\t\t</Provider>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}